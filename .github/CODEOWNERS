# üë• Code Owners - Cinema Multi-Platform Test Automation Framework

# Este archivo define qui√©n debe revisar cambios espec√≠ficos en el repositorio.
# GitHub autom√°ticamente solicita reviews de los code owners apropiados.

# üèóÔ∏è REGLAS GLOBALES

# Due√±o principal del repositorio - responsable de arquitectura general
* @fcabanilla

# üìÅ RESPONSABILIDADES POR DIRECTORIO

# Configuraci√≥n principal y scripts
/package.json                  @fcabanilla
/playwright.config.ts          @fcabanilla
/eslint.config.js             @fcabanilla
/tsconfig.json                @fcabanilla
/.github/                     @fcabanilla

# Documentaci√≥n principal
/README.md                    @fcabanilla
/CONTRIBUTING.md              @fcabanilla
/docs/                        @fcabanilla

# Core framework - requiere review arquitectural
/core/                        @fcabanilla
/config/                      @fcabanilla

# üé¨ PLATAFORMA CINESA

# Page Objects Cinesa - equipo especializado en Cinesa
/pageObjectsManagers/cinesa/   @fcabanilla
/fixtures/cinesa/             @fcabanilla

# Tests Cinesa por funcionalidad
/tests/cinesa/navbar/         @fcabanilla
/tests/cinesa/movies/         @fcabanilla
/tests/cinesa/cinemas/        @fcabanilla
/tests/cinesa/login/          @fcabanilla
/tests/cinesa/signup/         @fcabanilla
/tests/cinesa/seatPicker/     @fcabanilla
/tests/cinesa/paymentPage/    @fcabanilla
/tests/cinesa/purchaseSummary/ @fcabanilla

# Funcionalidades cr√≠ticas - requieren aprobaci√≥n adicional
/tests/cinesa/seatPicker/     @fcabanilla
/tests/cinesa/paymentPage/    @fcabanilla
/tests/cinesa/purchaseSummary/ @fcabanilla

# üé≠ PLATAFORMA UCI

# Page Objects UCI - equipo especializado en UCI (TODO: asignar owners espec√≠ficos)
/pageObjectsManagers/uci/     @fcabanilla
/fixtures/uci/               @fcabanilla
/tests/uci/                  @fcabanilla

# Manejo espec√≠fico de Cloudflare - requiere experiencia t√©cnica avanzada
/tests/uci/cloudflare/       @fcabanilla
/core/webactions/cloudflareHandler.ts @fcabanilla

# üìä REPORTES Y CI/CD

# Configuraci√≥n de Allure - especialista en reportes
/allure.config.js            @fcabanilla
/.allure/                    @fcabanilla

# Scripts de CI/CD cuando se implementen
/.github/workflows/          @fcabanilla

# üîí ARCHIVOS SENSIBLES

# Archivos de configuraci√≥n sensibles
*.env                        @fcabanilla
*.env.example               @fcabanilla
/loggedInState*.json        @fcabanilla

# üß™ TESTS CR√çTICOS

# Tests que afectan flujos de compra - requieren testing exhaustivo
**/seatPicker/*.spec.ts     @fcabanilla
**/paymentPage/*.spec.ts    @fcabanilla
**/purchaseSummary/*.spec.ts @fcabanilla

# Tests de autenticaci√≥n - seguridad cr√≠tica
**/login/*.spec.ts          @fcabanilla
**/signup/*.spec.ts         @fcabanilla

# Tests de cloudflare - complejidad t√©cnica alta
**/cloudflare/*.spec.ts     @fcabanilla

# üìã PATRONES ESPECIALES

# Cualquier cambio en fixtures base requiere review arquitectural
**/playwright.fixtures.ts   @fcabanilla

# Cambios en tipos base
/core/types/                @fcabanilla

# Cambios en WebActions - afecta toda la suite
/core/webactions/webActions.ts @fcabanilla

# üö® ARCHIVOS DE ALTA CRITICIDAD (requieren 2+ approvals)

# Configuraci√≥n principal de Playwright - cambios cr√≠ticos
/playwright.config.ts       @fcabanilla

# Configuraci√≥n de entornos - impacta todas las plataformas
/config/environments.ts     @fcabanilla

# ‚öôÔ∏è REGLAS DE APROVACI√ìN

# Para cambios en directorios cr√≠ticos, se requieren m√∫ltiples approvals:
# - /core/: 2 approvals m√≠nimo
# - /config/: 2 approvals m√≠nimo  
# - /**/paymentPage/: 2 approvals m√≠nimo
# - /**/purchaseSummary/: 2 approvals m√≠nimo

# üìù NOTAS PARA FUTURAS EXPANSIONES

# TODO: Asignar owners espec√≠ficos cuando el equipo crezca:
# /pageObjectsManagers/cinesa/ @team-cinesa @fcabanilla
# /pageObjectsManagers/uci/ @team-uci @fcabanilla
# /tests/cinesa/ @team-cinesa @fcabanilla  
# /tests/uci/ @team-uci @fcabanilla

# TODO: Crear equipos especializados:
# @team-core-framework - para cambios en /core/
# @team-qa-leads - para cambios en tests cr√≠ticos
# @team-devops - para cambios en CI/CD

# TODO: Configurar branch protection rules que requieran:
# - Status checks pasando (linting, tests)
# - Code owner reviews
# - Up-to-date branch requirement